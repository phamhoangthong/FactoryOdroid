//
// Created by phamh on 1/30/2018.
//
///////////////////////////////////////////////////////////////////////////////////////////////////
#include "MClient.h"
///////////////////////////////////////////////////////////////////////////////////////////////////
void* MCLIENT_THREAD(void *param) {
    MClient *p_client = (MClient*)(param);
    p_client->run();
}
///////////////////////////////////////////////////////////////////////////////////////////////////
MClient::MClient() {

}
///////////////////////////////////////////////////////////////////////////////////////////////////
MClient::~MClient() {

}
///////////////////////////////////////////////////////////////////////////////////////////////////
int MClient::start() {
    if(flag_run) {
        return -1;
    }
    flag_run = true;
    int rc = pthread_create(&m_thread, NULL, MCLIENT_THREAD, this);
    if(rc) {
        return -2;
    }
    return 0;
}
///////////////////////////////////////////////////////////////////////////////////////////////////
void MClient::run() {
    char *m_buffer = new char[SIZE_BUFFER];
    while(flag_run) {
        int n = read(socket_tcp_ip,m_buffer,SIZE_BUFFER);
        if(n < 0) {
            string msg = "Error received data";
            haveError(code,msg);
        }
        haveData(code, m_buffer, n);
    }
}
///////////////////////////////////////////////////////////////////////////////////////////////////
void MClient::stop() {
    flag_run = false;
    pthread_join(m_thread, NULL);
}
///////////////////////////////////////////////////////////////////////////////////////////////////
void MClient::send(char *data, size_t length) {
    int n = write(socket_tcp_ip, data, length);
    if(n < 0) {
        string msg = "Error sended data";
        haveError(code,msg);
    }
    sended(code);
}
///////////////////////////////////////////////////////////////////////////////////////////////////